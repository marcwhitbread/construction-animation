@import "_variables.less";
@import "mixins.less";
@import "animations.less";
@import "crane.less";

.structure {
	position: absolute;
	bottom: 0;
	
	@width: @structure_width;
	@depth: @structure_depth;
	@height: @structure_height;
	
	width: @width;
	height: 0;

	.size(@width, @depth, @height, rgba(0,0,0,0), false, true);
	.transform(
		translateX((@plot_width - @structure_width)/2)
		translateY(-2px)
	);
	
	.base-tile {
		position: absolute;
		top: 0;
		left: 0;
		
		@indent: 4px;
		@width: @structure_width - @indent;
		@height: @structure_width - @indent;
		
		width: @width;
		height: @height;
		border: (@plot_width - @width)/2 solid @dirt_color;
		
		.transform(
			translateX(-(@plot_width - @structure_width)/2)
			translateY(-@structure_width/2 - (@plot_width - @structure_width)/2)
			translateZ(1px)
			rotateX(90deg)
		);
	}
	
	.basement {
		opacity: 0.5;
		position: absolute;
		top: 0;
		left: 0;
		
		@width: @structure_width - @structure_story_indent + 2px;
		@depth: @structure_depth - @structure_story_indent + 2px;
		@height: @basement_floors * (@structure_story_height + @structure_story_floor_height);
		
		width: @width;
		height: @height;
	
		.size(@width, @depth, @height, @dirt_color, false, false);
		
		.transform(
			translateX(@structure_story_indent/2 - 1px)
			translateY(0)
		);
	}
	
	.build-deck {
		bottom: 0;
		left: 0;
		visibility: hidden;
		opacity: 0;
		
		@width: @structure_width;
		@depth: @structure_depth;
		@height: @structure_build_deck_height;
		
		width: @width;
		height: @height;

		.size(@width, @depth, @height, rgba(0,0,0,0.0), @structure_build_interior_pattern, false);
		
		.transition(all @build_transition_duration linear);
		
		.light {
			position: absolute;
			bottom: 0;
			left: 0;
			opacity: 0;
			
			width: 10px;
			height: 10px;
			background: #000;
			z-index: 6;
			
			.transform(
				translateX(@structure_width/2 - 5px)
				translateY(0)
				translateZ(0)
				rotateX(90deg)
			);
			
			.box-shadow(0 0 20px (@structure_width/2 - 20px) #fff);
			
			.animation(weldflicker 5000ms infinite);
		}
		
		.panel {
			bottom: 0;
			left: 0;
			z-index: 5;
		}
		
		.sheet {
			opacity: 0.5;
			top: 0;
			left: 0;
			z-index: 4;
			
			.transition(all @build_transition_duration linear);
			
			> .side {
				overflow: hidden;
			}

			.text {
				display: block;
				position: absolute;
				top: 0;
				right: 0;
				width: 100%;
				left: 0;
			}
		}
		
		&.build-deck-1 {
		
			.transform(
				translateX(0)
				translateY(-@structure_build_deck_panel_1_height/2 - @plot_height/2)
				translateZ(0)
			);
			
			.panel {
				@width: @structure_width;
				@depth: @structure_depth;
				@height: @structure_build_deck_panel_1_height;
				
				width: @width;
				height: @height;
				
				.size(@width, @depth, @height, @structure_build_deck_color, false, true);
				
				.transform(
					translateX(0)
					translateY(-(@structure_build_deck_height - @structure_build_deck_panel_1_height)/2 - @structure_build_deck_height + @structure_build_deck_panel_1_height/2)
					translateZ(0)
				);
			}
			
			.sheet {
				@width: @structure_width - @structure_wrap_indent*2;
				@depth: @structure_depth - @structure_wrap_indent*2;
				@height: 0;
				
				width: @width;
				height: @height;
				max-height: @structure_wrap_1_height;
				
				.size(@width, @depth, @height, @structure_wrap_1_color, false, true);
				
				.transform(
					translateX(@structure_wrap_indent)
					translateY(-(@structure_build_deck_height - @structure_build_deck_panel_1_height)/2 - @structure_build_deck_height + @structure_build_deck_panel_1_height/2)
					translateZ(0)
				);
				
				.text {
					top: auto;
					bottom: 0;
					
					text-align: left;
					color: #fff;
					margin: 0 0 0 0;
					
					font-family: Verdana;
					font-weight: 700;
					font-size: 10px;
					line-height: 10px;
					
					.transform(
						translateX(4px)
						translateY(-3px)
					);
				}
			}
		}
		
		&.build-deck-2 {
			
			.transform(
				translateX(0)
				translateY(-@structure_build_deck_panel_2_height/2 - @plot_height/2)
				translateZ(0)
			);
			
			.panel {
				@width: @structure_width;
				@depth: @structure_depth;
				@height: @structure_build_deck_panel_2_height;
				
				width: @width;
				height: @height;
				
				.size(@width, @depth, @height, @structure_build_deck_color, false, false);
				
				.transform(
					translateX(0)
					translateY(-(@structure_build_deck_height - @structure_build_deck_panel_2_height)/2 - @structure_build_deck_height + @structure_build_deck_panel_2_height/2)
					translateZ(0)
				);
			}
			
			.sheet {
				top: auto;
				bottom: 0;
				
				@width: @structure_width - @structure_wrap_indent*2;
				@depth: @structure_depth - @structure_wrap_indent*2;
				@height: 0;
				
				width: @width;
				height: @height;
				min-height: 0;
				max-height: @structure_wrap_2_height;
				
				.size(@width, @depth, @height, @structure_wrap_2_color, false, true);
				
				.transform(
					translateX(@structure_wrap_indent)
					translateY(-@structure_build_deck_height)
					translateZ(0)
				);
				
				.text {
					text-align: right;
					color: #fff;
					margin: 2px 0 0 0;
					
					font-family: Verdana;
					font-weight: 700;
					font-size: 12px;
					line-height: 12px;
					
					.transform(
						translateX(@structure_wrap_2_height/2)
						translateY(@structure_wrap_2_height/2 + 5px)
						rotateZ(-90deg)
					);
				}
			}
		}
		
		&.show {
			visibility: visible;
			opacity: 1;			
		}
	}
	
	.stories {
		position: absolute;
		bottom: 0;
		left: 0;
		
		.story {
			top: 0;
			margin: 0 0 @structure_story_height 0;
			z-index: 2;
			visibility: hidden;
			opacity: 0;
			
			@width: @structure_width - @structure_story_indent*2;
			@depth: @structure_depth - @structure_story_indent*2;
			@height: @structure_story_height + @structure_story_floor_height;
			
			width: @width;
			height: @height;
			.size(@width, @depth, @height, rgba(0,0,0,0), false, false);
			
			.transform(
				translateX(@structure_story_indent)
			);
			
			.wall {
				bottom: 0;
				z-index: 3;
				opacity: 0;
				
				@width: @structure_width - @structure_story_indent*2 - @structure_fence_indent*2;
				@depth: @structure_depth - @structure_story_indent*2 - @structure_fence_indent*2;
				@height: @structure_story_height/2;
				
				width: @width;
				height: @height;
				.size(@width, @depth, @height, @structure_fence_color, false, false);
				
				.transform(
					translateX(@structure_fence_indent)
					translateY(-@structure_story_floor_height)
				);
			}
			
			.girders {
				
				.girder {
					bottom: 0;
					z-index: 3;
					
					@width: @structure_width - @structure_story_indent*2 - @structure_story_pillar_indent*2 - @crane_width + @structure_steel_width;
					@depth: @structure_steel_width;
					@height: @structure_story_floor_height;
					
					width: @width;
					height: @height;
					.size(@width, @depth, @height, @structure_steel_color, false, false);
					
					&:nth-child(3),
					&:nth-child(4) {
						@width: @structure_steel_width;
						@depth: @structure_width - @structure_story_indent*2 - @structure_story_pillar_indent*2 - @crane_width - @structure_steel_width;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, @structure_steel_color, false, false);
					}
						
					&:nth-child(1) {
						.transform(
							translateX(@structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(0)
							translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
						);
					}
					
					&:nth-child(2) {
						.transform(
							translateX(@structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(0)
							translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
						);
					}
					
					&:nth-child(3) {
						.transform(
							translateX(@structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(0)
							translateZ(0)
						);
					}
					
					&:nth-child(4) {
						.transform(
							translateX(@structure_width - @structure_story_indent*2 - @crane_width/2 - @structure_story_pillar_indent - @structure_steel_width/2)
							translateY(0)
							translateZ(0)
						);
					}
				}
			}
			
			.floor {
				bottom: 0;
				z-index: 3;
				opacity: 0;
				
				@width: @structure_width - @structure_story_indent*2;
				@depth: @structure_depth - @structure_story_indent*2;
				@height: @structure_story_floor_height;
				
				width: @width;
				height: @height;
				.size(@width, @depth, @height, @structure_concrete_color, false, false);
				
				.transform(
					translateX(0)
					translateY(0)
				);
			}
			
			.pillars {
				
				.pillar {
					bottom: 0;
					left: 0;
					z-index: 4;
					
					@width: @structure_steel_width;
					@depth: @structure_steel_width;
					@height: 0;
					
					width: @width;
					height: @height;
					
					.size(@width, @depth, @height, @structure_steel_color, false, true);
					
					&:nth-child(1) {
						.transform(
							translateX(@structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(-@structure_story_floor_height)
							translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
						);
					}
					
					&:nth-child(2) {
						.transform(
							translateX(@structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(-@structure_story_floor_height)
							translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
						);
					}
					
					&:nth-child(3) {
						.transform(
							translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(-@structure_story_floor_height)
							translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
						);
					}
					
					&:nth-child(4) {
						.transform(
							translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent + (@crane_width - @structure_steel_width)/2)
							translateY(-@structure_story_floor_height)
							translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
						);
					}
				}
			}
			
			&.ug, 
			&.ground {
				
				.floor {
					@width: @structure_width - @structure_story_indent;
					@depth: @structure_depth - @structure_story_indent;
					@height: @structure_story_floor_height;
					
					width: @width;
					height: @height;
					.size(@width, @depth, @height, @structure_concrete_color, false, false);
					
					.transform(
						translateX(-@structure_story_indent/2)
						translateY(0)
					);
				}
			}
			
			&.ug {
				
				.wall {
					bottom: 0;
					z-index: 3;
					opacity: 0;
					
					@width: @structure_width - @structure_story_indent;
					@depth: @structure_depth - @structure_story_indent;
					@height: @structure_story_height/2;
					
					width: @width;
					height: @height;
					.size(@width, @depth, @height, @structure_concrete_color, false, false);
					
					.transform(
						translateX(-@structure_story_indent/2)
						translateY(-@structure_story_floor_height)
					);
				}
			}

			&.p1 {
				visibility: visible;
				opacity: 1;
				
				.transition(all @build_transition_duration linear);
				
				.wall {
					.transition(all @build_transition_duration linear);
				}
				
				.girders {
					.girder {
						.transition(all @build_transition_duration linear);
					}
				}
				
				.floor {
					.transition(all @build_transition_duration linear);
				}
				
				.pillars {
				
					.pillar {
						height: @structure_story_height;
						
						.transition(all (@build_transition_duration - 100ms) linear);
					}
				}
				
				&.roof {
					
					.pillars {
				
						.pillar {
							height: @structure_story_roof_height - @structure_story_floor_height;
							
							.transition(all (@build_transition_duration - 100ms) linear);
						}
					}
				}
			}
			
			&.p1p2 {
				visibility: visible;
				opacity: 1;
			
				.wall {
					opacity: 0;
				}
				
				.girders {
					opacity: 0;
				}
				
				.floor {
					opacity: 1;
					
					@width: @structure_width - @structure_story_indent*2;
					@depth: @structure_depth - @structure_story_indent*2;
					@height: @structure_story_floor_height;
					
					width: @width;
					height: @height;
					.size(@width, @depth, @height, @structure_concrete_color, @structure_rebar_pattern, false);
				}
				
				.pillars {
					.pillar {
						opacity: 1;
						
						@width: @crane_width;
						@depth: @crane_depth;
						@height: @structure_story_height;
						
						width: @width;
						
						.size(@width, @depth, @height, @structure_concrete_color, @structure_rebar_pattern, false);
						
						&:nth-child(1) {
							.transform(
								translateX(@structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(2) {
							.transform(
								translateX(@structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(3) {
							.transform(
								translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(4) {
							.transform(
								translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
							);
						}
					}
				}
			}
			
			&.p2 {
				visibility: visible;
				opacity: 1;
				
				.wall {
					opacity: 0.5;
					
					.transition(all @build_transition_duration linear);
				}
				
				.girders {
					opacity: 0;
				}
				
				.floor {
					opacity: 1;
					
					.transition(all @build_transition_duration linear);
				}
				
				.pillars {
					.pillar {
						@width: @crane_width;
						@depth: @crane_depth;
						@height: @structure_story_height;
						
						width: @width;
						height: @height;
						
						.size(@width, @depth, @height, @structure_concrete_color, false, false);
						
						.transition(background @build_transition_duration linear);

						&:nth-child(1) {
							.transform(
								translateX(@structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(2) {
							.transform(
								translateX(@structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(3) {
							.transform(
								translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(4) {
							.transform(
								translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
							);
						}
					}
				}
				
				&.ug {
					
					.wall {
						opacity: 1;
					}
				}
				
				&.roof {
					
					.wall {
						opacity: 1;
						
						@width: @structure_width - @structure_story_indent*2;
						@depth: @structure_depth - @structure_story_indent*2;
						@height: @structure_story_roof_height - @structure_story_floor_height;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, @structure_concrete_color, false, false);
						
						.transform(
							translateX(0)
							translateY(-@structure_story_floor_height)
						);
					}

					.pillars {
				
						.pillar {
							@width: @crane_width;
							@depth: @crane_depth;
							@height: @structure_story_roof_height - @structure_story_floor_height;
							
							width: @width;
							height: @height;
							
							.size(@width, @depth, @height, @structure_concrete_color, false, false);
							
							.transition(all (@build_transition_duration - 100ms) linear);
						}
					}
				}
			}
			
			&.p3 {
				visibility: visible;
				opacity: 1;
				
				.wall {
					opacity: 0.7;
					
					@width: @structure_width - @structure_story_indent*2;
					@depth: @structure_depth - @structure_story_indent*2;
					@height: @structure_story_height;
					
					width: @width;
					height: @height;
					.size(@width, @depth, @height, @structure_glass_color, false, false);
					
					.transform(
						translateX(0)
						translateY(-@structure_story_floor_height)
					);
				}
				
				.girders {
					opacity: 0;
				}
				
				.floor {
					opacity: 1;
					
					@width: @structure_width - @structure_story_indent*2;
					@depth: @structure_depth - @structure_story_indent*2;
					@height: @structure_story_floor_height;
					
					width: @width;
					height: @height;
					.size(@width, @depth, @height, @structure_brick_color, false, false);
				}
				
				.pillars {
					.pillar {
						@width: @crane_width;
						@depth: @crane_depth;
						@height: @structure_story_height;
						
						width: @width;
						
						.size(@width, @depth, @height, @structure_brick_color, false, false);
						
						&:nth-child(1) {
							.transform(
								translateX(@structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(2) {
							.transform(
								translateX(@structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(3) {
							.transform(
								translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(-@structure_width/2 + @structure_story_indent + @crane_width/2 + @structure_story_pillar_indent)
							);
						}
						
						&:nth-child(4) {
							.transform(
								translateX(@structure_width - @structure_story_indent*2 - @crane_width - @structure_story_pillar_indent)
								translateY(-@structure_story_floor_height)
								translateZ(@structure_width/2 - @structure_story_indent - @crane_width/2 - @structure_story_pillar_indent)
							);
						}
					}
				}
				
				&.roof {
					
					.floor {
						@width: @structure_width - @structure_story_indent*2;
						@depth: @structure_depth - @structure_story_indent*2;
						@height: @structure_story_floor_height;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, @structure_roof_color, false, false);
						
						.transition(all @build_transition_duration linear);
					}
					
					.wall {
						opacity: 1;
						
						@width: @structure_width - @structure_story_indent*2;
						@depth: @structure_depth - @structure_story_indent*2;
						@height: @structure_story_roof_height - @structure_story_floor_height;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, @structure_roof_color, false, false);
						
						.transform(
							translateX(0)
							translateY(-@structure_story_floor_height)
						);
						
						.transition(all @build_transition_duration linear);
					}

					.pillars {
				
						.pillar {
							visibility: hidden;
							opacity: 0;
							
							.transition(all @build_transition_duration linear);
						}
					}
				}
				
				&.ug,
				&.ground {
					
					.floor {
						@width: @structure_width - @structure_story_indent;
						@depth: @structure_depth - @structure_story_indent;
						@height: @structure_story_floor_height;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, @structure_concrete_color, false, false);
						
						.transform(
							translateX(-@structure_story_indent/2)
							translateY(0)
						);
					}
				}
				
				&.ground {
					
					.wall {
						@width: @structure_width - @structure_story_indent*2;
						@depth: @structure_depth - @structure_story_indent*2;
						@height: @structure_story_height;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, darken(@structure_glass_color, 20%), false, false);
						
						.transform(
							translateX(0)
							translateY(-@structure_story_floor_height)
						);
					}
				}
				
				&.ug {
					
					.pillars {
						
						.pillar {
							@width: @crane_width;
							@depth: @crane_depth;
							@height: @structure_story_height;
							
							width: @width;
							
							.size(@width, @depth, @height, @structure_concrete_color, false, false);
						}
					}
					
					.wall {
						opacity: 1;
						
						@width: @structure_width - @structure_story_indent;
						@depth: @structure_depth - @structure_story_indent;
						@height: @structure_story_height/2;
						
						width: @width;
						height: @height;
						.size(@width, @depth, @height, @structure_concrete_color, false, false);
						
						.transform(
							translateX(-@structure_story_indent/2)
							translateY(-@structure_story_floor_height)
						);
					}
				}
			}
			
			@iterations: 100;
		
			.mixin-loop (@i) when (@i > 0) {
				
				&:nth-child(@{i}) {
					.transform(
						translateX(@structure_story_indent)
						translateY(-@i * (@structure_story_height + @structure_story_floor_height) + @basement_floors * (@structure_story_height + @structure_story_floor_height))
					);
					
					.animation-delay(@i * @structure_p1_build_duration);
					
					.wall {
						.animation-delay(@i * @structure_p1_build_duration + @structure_p2_build_duration);
					}
					
					.girders {
						.animation-delay(@i * @structure_p1_build_duration + @structure_p2_build_duration);
					}
					
					.floor {
						.animation-delay(@i * @structure_p1_build_duration + @structure_p2_build_duration);
					}
					
					.pillars {
						.pillar {
							.animation-delay(@i * @structure_p1_build_duration + @structure_p2_build_duration);
						}
					}
				}
				
				.mixin-loop(@i - 1);
			}
			
			.mixin-loop(@iterations);
		}
	}
	
	.crane();
}